{
  "mcp_tools": {
    "version": "1.0.0",
    "description": "AI Calendar MCP Tools - Model Context Protocol tool definitions for calendar event management",
    "tools": [
      {
        "name": "saveEvent",
        "description": "Creates a new calendar event in the database with comprehensive validation",
        "inputSchema": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Event title",
              "minLength": 1,
              "maxLength": 200,
              "example": "Team Meeting"
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "Event start time in ISO 8601 format",
              "example": "2024-01-15T14:00:00Z"
            },
            "endTime": {
              "type": "string",
              "format": "date-time",
              "description": "Event end time in ISO 8601 format",
              "example": "2024-01-15T15:00:00Z"
            },
            "location": {
              "type": "string",
              "description": "Event location (optional)",
              "maxLength": 300,
              "example": "Conference Room A"
            },
            "description": {
              "type": "string",
              "description": "Event description (optional)",
              "maxLength": 1000,
              "example": "Weekly team standup meeting"
            },
            "timezone": {
              "type": "string",
              "description": "Event timezone (optional, defaults to UTC)",
              "default": "UTC",
              "example": "America/New_York"
            }
          },
          "required": ["title", "startTime", "endTime"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "description": "Whether the operation was successful"
            },
            "eventId": {
              "type": "integer",
              "description": "ID of the created event"
            },
            "message": {
              "type": "string",
              "description": "Success or error message"
            },
            "event": {
              "type": "object",
              "description": "Complete event object with all fields",
              "properties": {
                "id": {"type": "integer"},
                "title": {"type": "string"},
                "startTime": {"type": "string", "format": "date-time"},
                "endTime": {"type": "string", "format": "date-time"},
                "location": {"type": "string"},
                "description": {"type": "string"},
                "timezone": {"type": "string"},
                "clientReferenceId": {"type": "string"},
                "createdAt": {"type": "string", "format": "date-time"},
                "updatedAt": {"type": "string", "format": "date-time"}
              }
            }
          }
        },
        "validation": {
          "rules": [
            "startTime must be before endTime",
            "title cannot be empty",
            "dates must be valid ISO 8601 format",
            "location and description are optional but have length limits"
          ]
        }
      },
      {
        "name": "updateEvent",
        "description": "Updates an existing calendar event with partial data",
        "inputSchema": {
          "type": "object",
          "properties": {
            "eventId": {
              "type": "integer",
              "description": "ID of the event to update",
              "minimum": 1
            },
            "title": {
              "type": "string",
              "description": "New event title (optional)",
              "minLength": 1,
              "maxLength": 200
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "New start time (optional)"
            },
            "endTime": {
              "type": "string",
              "format": "date-time",
              "description": "New end time (optional)"
            },
            "location": {
              "type": "string",
              "description": "New location (optional)",
              "maxLength": 300
            },
            "description": {
              "type": "string",
              "description": "New description (optional)",
              "maxLength": 1000
            }
          },
          "required": ["eventId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "description": "Whether the operation was successful"
            },
            "message": {
              "type": "string",
              "description": "Success or error message"
            },
            "event": {
              "type": "object",
              "description": "Updated event object with all current fields"
            }
          }
        },
        "validation": {
          "rules": [
            "eventId must exist in database",
            "if both startTime and endTime provided, startTime must be before endTime",
            "only provided fields will be updated",
            "updatedAt timestamp will be automatically set"
          ]
        }
      },
      {
        "name": "cancelEvent",
        "description": "Cancels (deletes) a calendar event by ID",
        "inputSchema": {
          "type": "object",
          "properties": {
            "eventId": {
              "type": "integer",
              "description": "ID of the event to cancel",
              "minimum": 1
            }
          },
          "required": ["eventId"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "description": "Whether the cancellation was successful"
            },
            "message": {
              "type": "string",
              "description": "Success or error message"
            },
            "eventId": {
              "type": "integer",
              "description": "ID of the cancelled event"
            }
          }
        },
        "validation": {
          "rules": [
            "eventId must exist in database",
            "operation is irreversible"
          ]
        }
      },
      {
        "name": "listEvents",
        "description": "Retrieves calendar events within a specified date range",
        "inputSchema": {
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string",
              "format": "date-time",
              "description": "Start date for the query range",
              "example": "2024-01-01T00:00:00Z"
            },
            "endDate": {
              "type": "string",
              "format": "date-time",
              "description": "End date for the query range",
              "example": "2024-01-31T23:59:59Z"
            },
            "limit": {
              "type": "integer",
              "description": "Maximum number of events to return (optional)",
              "minimum": 1,
              "maximum": 1000,
              "default": 100
            }
          },
          "required": ["startDate", "endDate"]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "success": {
              "type": "boolean",
              "description": "Whether the operation was successful"
            },
            "message": {
              "type": "string",
              "description": "Success or error message"
            },
            "events": {
              "type": "array",
              "description": "Array of events in the specified date range",
              "items": {
                "type": "object",
                "properties": {
                  "id": {"type": "integer"},
                  "title": {"type": "string"},
                  "startTime": {"type": "string", "format": "date-time"},
                  "endTime": {"type": "string", "format": "date-time"},
                  "location": {"type": "string"},
                  "description": {"type": "string"},
                  "timezone": {"type": "string"},
                  "clientReferenceId": {"type": "string"},
                  "createdAt": {"type": "string", "format": "date-time"},
                  "updatedAt": {"type": "string", "format": "date-time"}
                }
              }
            },
            "count": {
              "type": "integer",
              "description": "Total number of events returned"
            },
            "dateRange": {
              "type": "object",
              "description": "Queried date range",
              "properties": {
                "startDate": {"type": "string", "format": "date-time"},
                "endDate": {"type": "string", "format": "date-time"}
              }
            }
          }
        },
        "validation": {
          "rules": [
            "startDate must be before endDate",
            "date range cannot exceed 1 year",
            "results ordered by startTime ascending"
          ]
        }
      }
    ],
    "error_handling": {
      "common_errors": [
        {
          "code": "VALIDATION_ERROR",
          "description": "Input validation failed",
          "typical_causes": ["Missing required fields", "Invalid date formats", "Out of range values"]
        },
        {
          "code": "NOT_FOUND",
          "description": "Requested event not found",
          "typical_causes": ["Invalid event ID", "Event was previously deleted"]
        },
        {
          "code": "DATABASE_ERROR",
          "description": "Database operation failed",
          "typical_causes": ["Connection issues", "Constraint violations", "Transaction failures"]
        },
        {
          "code": "INTERNAL_ERROR",
          "description": "Unexpected system error",
          "typical_causes": ["Unhandled exceptions", "Configuration issues", "Resource constraints"]
        }
      ],
      "error_response_format": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "const": false
          },
          "error": {
            "type": "object",
            "properties": {
              "code": {"type": "string"},
              "message": {"type": "string"},
              "details": {"type": "object"}
            }
          }
        }
      }
    },
    "usage_examples": [
      {
        "description": "Creating a simple meeting",
        "tool": "saveEvent",
        "input": {
          "title": "Project Kickoff",
          "startTime": "2024-01-15T10:00:00Z",
          "endTime": "2024-01-15T11:00:00Z",
          "location": "Room 101"
        }
      },
      {
        "description": "Updating event time",
        "tool": "updateEvent",
        "input": {
          "eventId": 123,
          "startTime": "2024-01-15T14:00:00Z",
          "endTime": "2024-01-15T15:00:00Z"
        }
      },
      {
        "description": "Listing events for a week",
        "tool": "listEvents",
        "input": {
          "startDate": "2024-01-15T00:00:00Z",
          "endDate": "2024-01-21T23:59:59Z"
        }
      }
    ]
  }
}